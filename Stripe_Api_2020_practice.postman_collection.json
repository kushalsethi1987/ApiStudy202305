{
	"info": {
		"_postman_id": "29aef346-9086-49a5-b8cb-0f932e3606e4",
		"name": "Stripe_Api_2020_practice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5108668"
	},
	"item": [
		{
			"name": "Add_Customer_Stripe_TC",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"This is the customer creation response \"+responseBody);// to log into console",
							"var responseJson=JSON.parse(responseBody); // to change response into Json",
							"console.log(\"Customer email id is \"+ responseJson.email);",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"}); // to assert the status code",
							"pm.request.add.header({key:'test',value:'Test Value'}); //To add header in request",
							"test[\"what i wanted to test\"]=responseJson.id===data.id // another way to assert the id in response",
							"",
							"pm.test(\"Number included\", function(){",
							"pm.expect([1,2,3]).to.include(3);",
							"}); //Chai Assertion Library",
							"",
							"",
							"pm.environment.get(\"variable_key\");",
							"pm.globals.get(\"variable_key\");",
							"pm.variables.get(\"variable_key\");",
							"pm.environment.set(\"variable_key\", \"variable_value\");",
							"pm.globals.set(\"variable_key\", \"variable_value\");",
							"pm.environment.unset(\"variable_key\");",
							"pm.globals.unset(\"variable_key\");",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
							"    console.log(response.json());",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.value).to.eql(100);",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"response_body_string\");",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"Created\");",
							"});",
							"var jsonObject = xml2Json(responseBody);",
							"var schema = {",
							"  \"items\": {",
							"    \"type\": \"boolean\"",
							"  }",
							"};",
							"",
							"var data1 = [true, false];",
							"var data2 = [true, 123];",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
							"  pm.expect(tv4.validate(data2, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}{{endpointscript}}?balance=50000&email=reena.runam@gmail.com",
					"host": [
						"{{baseUrl}}{{endpointscript}}"
					],
					"query": [
						{
							"key": "balance",
							"value": "50000"
						},
						{
							"key": "email",
							"value": "reena.runam@gmail.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Playtech",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "fsdsf",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "sk_test_WJTlE8wgK2mZ6HLN7RqZdx6O",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.stripe.com/v1/"
		}
	]
}